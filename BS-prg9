#include <iostream>
using namespace std;

int findRotationCount(int arr[], int n) {
    int left = 0, right = n - 1;

    while (left <= right) {
        if (arr[left] <= arr[right]) 
            return left; // Already sorted

        int mid = left + (right - left) / 2;
        int next = (mid + 1) % n;
        int prev = (mid - 1 + n) % n;

        if (arr[mid] <= arr[prev] && arr[mid] <= arr[next])
            return mid;

        if (arr[mid] <= arr[right])
            right = mid - 1;
        else
            left = mid + 1;
    }
    return -1;
}

int main() {
    int arr[] = {7, 9, 11, 12, 15, 2, 3, 5};
    int n = sizeof(arr) / sizeof(arr[0]);

    int rotations = findRotationCount(arr, n);
    cout << "Array is rotated " << rotations << " times" << endl;
    return 0;
}
