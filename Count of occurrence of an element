```
#include <iostream>
using namespace std;

int binarySearch(int arr[], int n, int target, bool findFirst) {
    int left = 0, right = n - 1;
    int result = -1;

    while (left <= right) {
        int mid = left + (right - left) / 2;

        if (arr[mid] == target) {
            result = mid;
            if (findFirst) {
                right = mid - 1; 
            } else {
                left = mid + 1; 
            }
        } else if (arr[mid] < target) {
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }

    return result;
}

int countOccurrences(int arr[], int n, int target) {
    int firstIndex = binarySearch(arr, n, target, true);
    if (firstIndex == -1) {
        return 0; 
    }

    int lastIndex = binarySearch(arr, n, target, false);
    return lastIndex - firstIndex + 1; 
}

int main() {
    int arr[] = {1, 2, 2, 2, 3, 4, 5};
    int n = sizeof(arr) / sizeof(arr[0]);
    int target = 2;

    int count = countOccurrences(arr, n, target);
    cout << "Count of occurrences of " << target << ": " << count << endl;

    return 0;
}
```
